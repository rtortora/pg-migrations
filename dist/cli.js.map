{"version":3,"sources":["../src/cli.js"],"names":["args","process","argv","slice","host","config","cwd","command","_","shift","toString","localMigrationsMap","has","get","console","log","exit","exception","trace","error","stack","message"],"mappings":";;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAMA,OAAO,uBAASC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAT,CAAb;;AAEA,kBAAC,aAAU;AACT,MAAI;AACF,UAAMC,OAAO,6BAAmBJ,KAAKK,MAAL,IAAeJ,QAAQK,GAAR,EAAlC,CAAb;;AACA,UAAMC,UAAUP,KAAKQ,CAAL,CAAOC,KAAP,GAAeC,QAAf,EAAhB;;AAEA,QAAIH,WAAW,MAAf,EAAuB;AACrB,YAAM,sBAAOH,IAAP,CAAN;AACD,KAFD,MAEO,IAAIG,WAAW,QAAf,EAAyB;AAC9B,YAAM,wBAASH,IAAT,EAAeJ,IAAf,CAAN;AACD,KAFM,MAEA,IAAIO,WAAW,QAAf,EAAyB;AAC9B,YAAM,wBAASH,IAAT,EAAeJ,IAAf,CAAN;AACD,KAFM,MAEA,IAAIO,WAAW,IAAf,EAAqB;AAC1B,YAAM,qBAAMH,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwBJ,IAAxB,CAAN;AACD,KAFM,MAEA,IAAIO,WAAW,MAAf,EAAuB;AAC5B,YAAM,qBAAMH,IAAN,EAAY,IAAZ,EAAkB,MAAlB,EAA0BJ,IAA1B,CAAN;AACD,KAFM,MAEA;AACL,YAAMW,2BAA2BP,KAAKO,kBAAL,EAAjC;;AACA,UAAIA,mBAAmBC,GAAnB,CAAuBL,OAAvB,CAAJ,EAAqC;AACnC,cAAM,qBAAMH,IAAN,EAAYO,mBAAmBE,GAAnB,CAAuBN,OAAvB,CAAZ,EAA6CP,KAAKQ,CAAL,CAAOC,KAAP,EAA7C,EAA6DT,IAA7D,CAAN;AACD,OAFD,MAEO;AACLc,gBAAQC,GAAR,CAAa,gCAA+BR,OAAQ,GAApD;AACAN,gBAAQe,IAAR,CAAa,CAAb;AACD;AACF;;AACDf,YAAQe,IAAR,CAAa,CAAb;AACD,GAxBD,CAwBE,OAAMC,SAAN,EAAiB;AACjB,QAAIjB,KAAKkB,KAAT,EAAgB;AACdJ,cAAQK,KAAR,CAAcF,UAAUG,KAAxB;AACD,KAFD,MAEO;AACLN,cAAQK,KAAR,CAAe,+CAAf;AACD;;AACDL,YAAQK,KAAR,CAAcF,UAAUI,OAAxB;AACApB,YAAQe,IAAR,CAAa,CAAb;AACD;AACF,CAlCD","file":"cli.js","sourcesContent":["\nimport minimist from 'minimist';\nimport MigrationsHost from './migrations_host.js';\nimport doCreate from './commands/do_create';\nimport doInit from './commands/do_init';\nimport doRun from './commands/do_run';\nimport doStatus from './commands/do_status';\n\nconst args = minimist(process.argv.slice(2));\n\n(async ()=>{\n  try {\n    const host = new MigrationsHost(args.config || process.cwd());\n    const command = args._.shift().toString();\n\n    if (command == 'init') {\n      await doInit(host);\n    } else if (command == 'create') {\n      await doCreate(host, args);\n    } else if (command == 'status') {\n      await doStatus(host, args);\n    } else if (command == 'up') {\n      await doRun(host, null, 'up', args);\n    } else if (command == 'down') {\n      await doRun(host, null, 'down', args);\n    } else {\n      const localMigrationsMap = await host.localMigrationsMap();\n      if (localMigrationsMap.has(command)) {\n        await doRun(host, localMigrationsMap.get(command), args._.shift(), args);\n      } else {\n        console.log(`Can't find migration by key '${command}'`);\n        process.exit(1);\n      }\n    }\n    process.exit(0);\n  } catch(exception) {\n    if (args.trace) {\n      console.error(exception.stack);\n    } else {\n      console.error(`Run again with --trace to see the stacktrace.`);\n    }\n    console.error(exception.message);\n    process.exit(1);\n  }\n})();"]}